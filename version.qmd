---
lang: zh
---

# 选择一个 Julia 版本

一般来说，在选择 Julia 版本时，我们主要的选项有以下三种：

- 稳定版本，目前是 `1.8`。
- 长期支持（LTS）版本，目前是 `1.6`。
- 预发布版本，目前是 `1.9`。

::: {.callout-note}
## Julia 的版本号 `x.y.z`

Julia 的版本号并不严格遵循[语义化版本](https://semver.org/lang/zh-CN/)，在次版本号 `y` 发生变化时，也可能会带来一些不兼容的 API 变更。当然，在修订号 `z` 发生变化时，一般来说都是向下兼容的。

目前还没有 Juila 2（在相当长的一段时间内都不会有），因此大多数情况下我们看到的会是 `1.y.z`，在一些比较陈旧的文档或代码中，我们也可能碰到 `0.y.z`。

预发布版本会在版本号后面加上一个 `-` 和一些标识符，例如 `1.6.0-beta1`，`1.6.0-rc1`，`1.6.0-rc2` 等等。其中，`alpha` 表示内部测试版本，`beta` 表示公开测试版本，`rc` 表示候选发布版本。
:::

对于绝大多数普通用户，使用**稳定版本**是一个最好的选择。Julia 是一门快速发展的语言，虽然长期支持版本也会一直得到维护，但无法使用新的特性，也无法享受到新的性能提升。

喜欢尝试新事物的用户可以选择**预发布版本**，但是需要注意的是，使用预发布版本可能会遇到一些兼容性问题。

如果你想要对 Julia 语言本身进行贡献，则需要使用从源码构建的最新开发版本，这里不再赘述。
